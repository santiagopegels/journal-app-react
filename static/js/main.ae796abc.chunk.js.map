{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","stopLoading","loadNotes","uid","a","collection","get","notesDB","notes","forEach","note","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","respJson","secure_url","addNewNote","activeNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterForm","AuthRouter","path","component","exact","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","active","display","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae796abc.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASEURL,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_APPID,\n};\n\n  firebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nexport {\n     db,\n     googleAuthProvider,\n     firebase\n}","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState)\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState)\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInputChange, reset]\n}\n","\nexport const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start Loading',\n    uiStopLoading: '[UI] Stop Loading',\n\n    notesNewEntry: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    \n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","import { types } from \"../types/types\"\n\nexport const setError = (err) => ({\n    type: types.uiSetError,\n    payload: err\n})\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n})\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n})\nexport const stopLoading = () => ({\n    type: types.uiStopLoading\n})","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNotes = async (uid) => {\n\n    const notesDB = await db.collection(`${uid}/journal/notes`).get()\n\n    const notes = []\n\n    notesDB.forEach(note => {\n        notes.push({\n            id: note.id,\n            ...note.data()\n        })\n    })\n\n    return notes\n}","\n\nexport const fileUpload = async (file) => {\n\n    const url = 'https://api.cloudinary.com/v1_1/dnj4s1btd/upload'\n    const formData = new FormData()\n    formData.append('upload_preset', 'react-journal')\n    formData.append('file', file)\n\n    try {\n        const resp = await fetch(url, {\n            method: 'POST',\n            body: formData\n        })\n\n        if (resp.ok) {\n            const respJson = await resp.json()\n            return respJson.secure_url\n        } else {\n            return await resp.json()\n        }\n\n    } catch (error) {\n        throw error\n    }\n\n\n}","import { db } from \"../firebase/firebase-config\"\nimport { types } from \"../types/types\"\nimport { loadNotes } from \"../helpers/loadNotes\"\nimport Swal from \"sweetalert2\"\nimport { fileUpload } from \"../helpers/fileUpload\"\n\n\nexport const startNewNote = () => {\n    return async (dispatch, getState) => {\n\n        const uid = getState().auth.uid\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\n\n        dispatch(activeNote(doc.id, newNote))\n        dispatch(addNewNote(doc.id, newNote))\n    }\n}\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesNewEntry,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid)\n        dispatch(setNotes(notes))\n    }\n}\n\nexport const setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n})\n\nexport const startSaveNote = (note) => {\n    return async (dispatch, getState) => {\n\n        const { uid } = getState().auth\n\n        !note.url && delete note.url\n\n        const noteToFirestore = { ...note }\n        delete noteToFirestore.id\n\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\n\n        dispatch(refreshNote(note.id, noteToFirestore))\n        Swal.fire('Saved', note.title, 'success')\n    }\n}\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n})\n\nexport const startUploading = (file) => {\n    return async (dispatch, getState) => {\n        const { active: activeNote } = getState().notes\n\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading()\n            }\n        })\n\n        const fileUrl = await fileUpload(file)\n        activeNote.url = fileUrl\n\n        dispatch(startSaveNote(activeNote))\n\n        Swal.close()\n    }\n}\n\nexport const startDeleting = (id) => {\n    return async (dispatch, getState) => {\n\n        const uid = getState().auth.uid\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\n\n        dispatch(deleteNote(id))\n    }\n\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n})\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n})","import Swal from \"sweetalert2\";\n\nimport { types } from \"../types/types\"\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\nimport { startLoading, stopLoading } from \"./ui\";\nimport { noteLogout } from \"./notes\";\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n\n        dispatch(startLoading())\n\n        return firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                dispatch(login(user.uid, user.displayName))\n                dispatch(stopLoading())\n            })\n            .catch(e => {\n                console.log(e);\n                dispatch(stopLoading())\n                Swal.fire('Error', e.message, 'error')\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch(login(user.uid, user.displayName))\n            })\n    }\n}\n\nexport const login = (uid, displayName) => {\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startRegisterForm = (email, password, name) => {\n    return (dispatch) => {\n\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name })\n                dispatch(login(user.uid, user.displayName))\n            })\n            .catch(e => {\n                console.log(e);\n            })\n    }\n}\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        await firebase.auth().signOut()\n\n        dispatch(logout())\n        dispatch(noteLogout())\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n})","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch()\n    const { loading } = useSelector(state => state.ui)\n\n    const [formValues, handleInputChange] = useForm({\n        email: 'test@test.com',\n        password: '123123'\n    })\n\n    const { email, password } = formValues\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        dispatch(startLoginEmailPassword(email, password))\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin())\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                >\n                    Create New Account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport validator from 'validator'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setError, removeError } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\nimport { startRegisterForm } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui)\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Santiago',\n        email: 'test@test.com',\n        password: '123123',\n        password2: '123123'\n    })\n\n    const { name, email, password, password2 } = formValues\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (isFormValid()) {\n            dispatch(startRegisterForm(email, password, name))\n\n        }\n    }\n\n    const isFormValid = () => {\n        if (name.trim().length === 0) {\n            dispatch(setError('Name Required'))\n            return false\n        }\n\n        if (!validator.isEmail(email)) {\n            dispatch(setError('Email is not valid'))\n            return false\n        }\n\n        if (password !== password2 || password.length < 5) {\n            dispatch(setError('Password should at least 6 characters and match'))\n            return false\n        }\n\n        dispatch(removeError())\n        return true\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\n\n                {\n                    msgError && (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    className=\"btn btn-primary btn-block mb-5\"\n                    type=\"submit\"\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link mt-1\"\n                >\n                    Already registered?\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n            <Switch>\n                <Route\n                    path=\"/auth/login\"\n                    component={LoginScreen}\n                    exact\n                ></Route>\n                <Route\n                    path=\"/auth/register\"\n                    component={RegisterScreen}\n                    exact\n                ></Route>\n                <Redirect to=\"/auth/login\" />\n            </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment'\nimport 'moment/locale/es';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date)\n    const dispatch = useDispatch()\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, {\n            date, title, body, url\n        }))\n    }\n    \n    return (\n        <div \n        className=\"journal__entry animate__animated animate__backInDown\"\n        onClick={handleEntryClick}\n        >\n\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }} \n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                    </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry'\nimport { useSelector } from 'react-redux'\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                    key={note.id} \n                    {...note}\n                    />\n                ))    \n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n    const handleNewEntry = () => {\n        dispatch(startNewNote())\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div\n                className=\"journal__new-entry\"\n                onClick={handleNewEntry}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries />\n        </aside>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br/>\n                or create an entry!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes'\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const { active } = useSelector(state => state.notes)\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active))\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click()\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0]\n\n        if (file) {\n            dispatch(startUploading(file))\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de Agosto 2020</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useForm } from '../../hooks/useForm'\nimport { activeNote, startDeleting } from '../../actions/notes'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch()\n    const { active: note } = useSelector(state => state.notes)\n    const [formValues, handleInputChange, reset] = useForm(note)\n\n    const { body, title } = formValues\n    const activeId = useRef(note.id)\n\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note)\n            activeId.current = note.id\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n\n        dispatch(activeNote(formValues.id, { ...formValues }))\n\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch(startDeleting(activeId.current))\n    }\n    \n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today?\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                >\n                </textarea>\n                {\n                    (note.url) &&\n                    <div className=\"notes__image\">\n                        <img\n                            src={note.url}\n                            alt=\"note\"\n                        />\n                    </div>\n                }\n            </div>\n\n            <button\n                className=\"btn btn-danger\"\n                onClick={handleDelete}\n            >\n                Delete\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Sidebar } from './Sidebar'\nimport { NothingSelected } from './NothingSelected'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { useSelector } from 'react-redux'\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n\n            <Sidebar />\n\n            <main>\n                {\n                    (active)\n                        ? (<NoteScreen />)\n                        : (<NothingSelected />)\n                }\n\n            </main>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname)\n\n    return (\n        <Route\n            {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/auth/login\" />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n\n\n    return (\n        <Route\n            {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/\" />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { firebase } from \"../firebase/firebase-config\";\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged(async (user) => {\n\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true)\n                dispatch(startLoadingNotes(user.uid))\n\n            } else {\n                setIsLoggedIn(false)\n            }\n\n            setChecking(false)\n        })\n\n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if (checking) {\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <Switch>\n                <PublicRoute\n                    path=\"/auth\"\n                    isAuthenticated={isLoggedIn}\n                    component={AuthRouter}\n                ></PublicRoute>\n\n                <PrivateRoute\n                    path=\"/\"\n                    isAuthenticated={isLoggedIn}\n                    exact\n                    component={JournalScreen}\n                ></PrivateRoute>\n\n                <Redirect to=\"/auth/login\" />\n\n            </Switch>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n        case types.uiStopLoading:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesNewEntry:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ? action.payload.note\n                        : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }\n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: [],\n            }\n\n        default:\n            return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport { uiReducer } from '../reducers/uiReducer';\nimport { authReducer } from '../reducers/authReducer'\nimport { notesReducer } from '../reducers/notesReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n            return {}\n\n        default:\n            return state\n    }\n}","import React from 'react'\nimport { AppRouter } from './routers/AppRouter'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}